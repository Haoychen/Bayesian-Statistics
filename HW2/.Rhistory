a <- mean[i] * mean[i] * (1 - mean[i]) / var[j] - mean[i]
b <- mean[i] * (1 - mean[i]) * (1 - mean[i]) / var[j] + mean[i] - 1
posterior_y[i,j] <- 1 / (mean[i] * (1 - mean[i])) * prod(dbeta(y, a, b))
posterior_z[i,j] <- 1 /(mean[i] * (1 - mean[i])) * prod(dbeta(z, a, b))
}
}
posterior_y_mean <- apply(posterior_y, 1, sum)
posterior_z_mean <- apply(posterior_z, 1, sum)
a_y <- rep(0, 1000)
a_z <- rep(0, 1000)
b_y <- rep(0, 1000)
b_z <- rep(0, 1000)
for(x in 1:1000){
i <- sample(1000, 1, prob = posterior_y_mean)
j<- sample(1000, 1, prob = posterior_y[i,])
a_y[x] <- mean[i] * mean[i] * (1 - mean[i]) / var[j] - mean[i]
b_y[x] <- mean[i] * (1 - mean[i]) * (1 - mean[i]) / var[j] + mean[i] - 1
}
sum(is.na(posterior_y_mean))
# 3.8
y <- c(16/(58+16), 9/(9+90), 10/(10+48), 13/(13+57), 19/(19+103), 20/(20+57), 18/(18+86), 17/(17+112), 35/(35+273), 55/(55+64))
z <- c(12/(12+113), 1/(1+18), 2/(2+14), 4/(4+44), 9/(9+208), 7/(7+67), 9/(9+29), 8/(154+8))
mean <- seq(.001, 1, .001)
var <- seq(.00025, .25, .00025)
posterior_y <- matrix(rep(0,1000000),1000,1000)
posterior_z <- matrix(rep(0,1000000),1000,1000)
for (i in 1:1000){
for (j in 1:floor(mean[i] * (1 - mean[i]) / 0.00025)){
a <- mean[i] * mean[i] * (1 - mean[i]) / var[j] - mean[i]
b <- mean[i] * (1 - mean[i]) * (1 - mean[i]) / var[j] + mean[i] - 1
posterior_y[i,j] <- 1 / (mean[i] * (1 - mean[i])) * prod(dbeta(y, a, b))
posterior_z[i,j] <- 1 /(mean[i] * (1 - mean[i])) * prod(dbeta(z, a, b))
}
}
posterior_y_mean <- apply(posterior_y, 1, sum)
posterior_z_mean <- apply(posterior_z, 1, sum)
a_y <- rep(0, 1000)
a_z <- rep(0, 1000)
b_y <- rep(0, 1000)
b_z <- rep(0, 1000)
for(x in 1:1000){
i <- sample(1000, 1, prob = posterior_y_mean)
j<- sample(1000, 1, prob = posterior_y[i,])
a_y[x] <- mean[i] * mean[i] * (1 - mean[i]) / var[j] - mean[i]
b_y[x] <- mean[i] * (1 - mean[i]) * (1 - mean[i]) / var[j] + mean[i] - 1
}
plot(a_y, b_y)
plot(a_z, b_z)
View(posterior_y)
View(posterior_z)
posterior_y_mean <- apply(posterior_y, 1, sum)
posterior_y_mean
y <- c(16/(58+16), 9/(9+90), 10/(10+48), 13/(13+57), 19/(19+103), 20/(20+57), 18/(18+86), 17/(17+112), 35/(35+273), 55/(55+64))
z <- c(12/(12+113), 1/(1+18), 2/(2+14), 4/(4+44), 9/(9+208), 7/(7+67), 9/(9+29), 8/(154+8))
mean <- seq(.001, 1, .001)
var <- seq(.00025, .25, .00025)
posterior_y <- matrix(rep(0,1000000),1000,1000)
posterior_z <- matrix(rep(0,1000000),1000,1000)
for (i in 1:1000){
for (j in 1:floor(mean[i] * (1 - mean[i]) / 0.00025)){
a <- mean[i] * mean[i] * (1 - mean[i]) / var[j] - mean[i]
b <- mean[i] * (1 - mean[i]) * (1 - mean[i]) / var[j] + mean[i] - 1
posterior_y[i,j] <- 1 / (mean[i] * (1 - mean[i])) * prod(dbeta(y, a, b))
posterior_z[i,j] <- 1 /(mean[i] * (1 - mean[i])) * prod(dbeta(z, a, b))
}
}
posterior_y_mean <- apply(posterior_y, 1, sum)
posterior_z_mean <- apply(posterior_z, 1, sum)
a_y <- rep(0, 1000)
a_z <- rep(0, 1000)
b_y <- rep(0, 1000)
b_z <- rep(0, 1000)
for(x in 1:1000){
i <- sample(1000, 1, prob = posterior_y_mean)
j<- sample(1000, 1, prob = posterior_y[i,])
a_y[x] <- mean[i] * mean[i] * (1 - mean[i]) / var[j] - mean[i]
b_y[x] <- mean[i] * (1 - mean[i]) * (1 - mean[i]) / var[j] + mean[i] - 1
}
plot(a_y, b_y)
plot(a_z, b_z)
y<-c(16/(58+16),9/(9+90),10/(10+48),13/(13+57),19/(19+103),20/(20+57),18/(18+86),17/(17+112),35/(35+273),55/(55+64))
z<-c(12/(12+113),1/(1+18),2/(2+14),4/(4+44),9/(9+208),7/(7+67),9/(9+29),8/(154+8))
m<-seq(.0005, .5, .0005)
v<-seq(.00005, .05, .00005)
posty<-matrix(rep(0,1000000),1000,1000)
postz<-matrix(rep(0,1000000),1000,1000)
for (i in 1:1000){
for (j in 1:floor(m[i]*(1-m[i])/0.00025)){
a<-m[i]*m[i]*(1-m[i])/v[j]-m[i]
b<-m[i]*(1-m[i])*(1-m[i])/v[j]+m[i]-1
posty[i,j]<-1/(m[i]*(1-m[i]))*prod(dbeta(y,a,b))
postz[i,j]<-1/(m[i]*(1-m[i]))*prod(dbeta(z,a,b))
}
}
posty_m<-apply(posty,1,sum)
postz_m<-apply(postz,1,sum)
a_y<-rep(0,1000)
a_z<-rep(0,1000)
b_y<-rep(0,1000)
b_z<-rep(0,1000)
for(x in 1:1000){
i<-sample(1000,1,prob=posty_m)
j<-sample(1000,1,prob=posty[i,])
a_y[x]<-m[i]*m[i]*(1-m[i])/v[j]-m[i]
b_y[x]<-m[i]*(1-m[i])*(1-m[i])/v[j]+m[i]-1
}
for(x in 1:1000){
i<-sample(1000,1,prob=postz_m)
j<-sample(1000,1,prob=postz[i,])
a_z[x]<-m[i]*m[i]*(1-m[i])/v[j]-m[i]
b_z[x]<-m[i]*(1-m[i])*(1-m[i])/v[j]+m[i]-1
}
plot(a_y,b_y)
plot(a_z,b_z)
u_y<-a_y/(a_y+b_y)
u_z<-a_z/(a_z+b_z)
hist(u_y-u_z)
mean <- seq(.0005, .5, .0005)
var <- seq(.00005, .05, .00005)
# Input y and z
y <- c(16/(58+16), 9/(9+90), 10/(10+48), 13/(13+57), 19/(19+103), 20/(20+57), 18/(18+86), 17/(17+112), 35/(35+273), 55/(55+64))
z <- c(12/(12+113), 1/(1+18), 2/(2+14), 4/(4+44), 9/(9+208), 7/(7+67), 9/(9+29), 8/(154+8))
mean <- seq(.0005, .5, .0005)
var <- seq(.00005, .05, .00005)
#Simulate posterior distribution of y and z
posterior_y <- matrix(rep(0, 1000000), 1000, 1000)
posterior_z <- matrix(rep(0, 1000000), 1000, 1000)
for (i in 1:1000){
for (j in 1:floor(mean[i] * (1 - mean[i]) / 0.00025)){
alpha <- mean[i] * mean[i] * (1 - mean[i]) / var[j] - mean[i]
beta <- mean[i] * (1 - mean[i]) * (1 - mean[i]) / var[j] + mean[i] - 1
posterior_y[i, j] <- 1 / (mean[i] * (1 - mean[i])) * prod(dbeta(y, alpha, beta))
postz[i, j] <- 1 / (mean[i] * (1 - mean[i])) * prod(dbeta(z, alpha, beta))
}
}
# Input y and z
y <- c(16/(58+16), 9/(9+90), 10/(10+48), 13/(13+57), 19/(19+103), 20/(20+57), 18/(18+86), 17/(17+112), 35/(35+273), 55/(55+64))
z <- c(12/(12+113), 1/(1+18), 2/(2+14), 4/(4+44), 9/(9+208), 7/(7+67), 9/(9+29), 8/(154+8))
mean <- seq(.0005, .5, .0005)
var <- seq(.00005, .05, .00005)
#Simulate posterior distribution of y and z
posterior_y <- matrix(rep(0, 1000000), 1000, 1000)
posterior_z <- matrix(rep(0, 1000000), 1000, 1000)
for (i in 1:1000){
for (j in 1:floor(mean[i] * (1 - mean[i]) / 0.00025)){
alpha <- mean[i] * mean[i] * (1 - mean[i]) / var[j] - mean[i]
beta <- mean[i] * (1 - mean[i]) * (1 - mean[i]) / var[j] + mean[i] - 1
posterior_y[i, j] <- 1 / (mean[i] * (1 - mean[i])) * prod(dbeta(y, alpha, beta))
postz[i, j] <- 1 / (mean[i] * (1 - mean[i])) * prod(dbeta(z, alpha, beta))
}
}
posterior_y_m<-apply(posterior_y, 1, sum)
posterior_z_m<-apply(posterior_z, 1, sum)
alpha_y <- rep(0, 1000)
alpha_z <- rep(0, 1000)
beta_y <- rep(0, 1000)
beta_z <- rep(0, 1000)
for(x in 1:1000){
i <- sample(1000, 1, prob = posterior_y_m)
j <- sample(1000, 1, prob = posterior_y[i,])
alpha_y[x] <- mean[i] * mean[i] * (1 - mean[i]) / var[j] - mean[i]
beta_y[x] <- mean[i] * (1 - mean[i]) * (1 - mean[i]) / var[j] + mean[i] - 1
}
for(x in 1:1000){
i <- sample(1000, 1, prob = posterior_z_m)
j <- sample(1000, 1, prob = posterior_z[i,])
alpha_z[x] <- mean[i] * mean[i] * (1 - mean[i]) / var[j] - mean[i]
beta_z[x] <- mean[i] * (1 - mean[i]) * (1 - mean[i]) / var[j] + mean[i] - 1
}
plot(alpha_y, beta_y)
plot(alpha_z, beta_z)
# Input y and z
y <- c(16/(58+16), 9/(9+90), 10/(10+48), 13/(13+57), 19/(19+103), 20/(20+57), 18/(18+86), 17/(17+112), 35/(35+273), 55/(55+64))
z <- c(12/(12+113), 1/(1+18), 2/(2+14), 4/(4+44), 9/(9+208), 7/(7+67), 9/(9+29), 8/(154+8))
mean <- seq(.0005, .5, .0005)
var <- seq(.00005, .05, .00005)
#Simulate posterior distribution of y and z
posterior_y <- matrix(rep(0, 1000000), 1000, 1000)
posterior_z <- matrix(rep(0, 1000000), 1000, 1000)
for (i in 1:1000){
for (j in 1:floor(mean[i] * (1 - mean[i]) / 0.00025)){
alpha <- mean[i] * mean[i] * (1 - mean[i]) / var[j] - mean[i]
beta <- mean[i] * (1 - mean[i]) * (1 - mean[i]) / var[j] + mean[i] - 1
posterior_y[i, j] <- 1 / (mean[i] * (1 - mean[i])) * prod(dbeta(y, alpha, beta))
posterior_z[i, j] <- 1 / (mean[i] * (1 - mean[i])) * prod(dbeta(z, alpha, beta))
}
}
posterior_y_m<-apply(posterior_y, 1, sum)
posterior_z_m<-apply(posterior_z, 1, sum)
alpha_y <- rep(0, 1000)
alpha_z <- rep(0, 1000)
beta_y <- rep(0, 1000)
beta_z <- rep(0, 1000)
for(x in 1:1000){
i <- sample(1000, 1, prob = posterior_y_m)
j <- sample(1000, 1, prob = posterior_y[i,])
alpha_y[x] <- mean[i] * mean[i] * (1 - mean[i]) / var[j] - mean[i]
beta_y[x] <- mean[i] * (1 - mean[i]) * (1 - mean[i]) / var[j] + mean[i] - 1
}
for(x in 1:1000){
i <- sample(1000, 1, prob = posterior_z_m)
j <- sample(1000, 1, prob = posterior_z[i,])
alpha_z[x] <- mean[i] * mean[i] * (1 - mean[i]) / var[j] - mean[i]
beta_z[x] <- mean[i] * (1 - mean[i]) * (1 - mean[i]) / var[j] + mean[i] - 1
}
plot(alpha_y, beta_y)
plot(alpha_z, beta_z)
miu_y <- alpha_y / (alpha_y + beta_y)
miu_z <- alpha_z / (alpha_z + beta_z)
hist(miu_y - miu_z)
miu_y <- alpha_y / (alpha_y + beta_y)
miu_z <- alpha_z / (alpha_z + beta_z)
diff <- miu_y - miu_z
hist(diff)
mean(diff)
library(mvtnorm)
# Input the data
x <- c(-0.86, -0.30, -0.05, 0.73)
n <- rep(5, 4)
y <- c(0, 1, 3, 5)
theta <- y / n
# Use logistic regression to calculate alpha and beta, nothing different with example in book
logis_regression <- glm(theta ~ x, family = binomial)
summary(logis_regression)
# Compute the posterior distribution
miu<-c(0,10)
alpha <- seq(-5, 10, 0.05)
beta <- seq(-10, 40, 0.05)
sigma <- matrix(c(4, 10, 10, 100), nrow = 2)
posterior <- matrix(0,length(alpha),length(beta))
for (i in 1:length(alpha)){
for (j in 1:length(beta)){
posterior[i,j]<-dmvnorm(c(alpha[i],beta[j]),miu,sigma)*prod(dbinom(y,n,exp(alpha[i]+beta[j]*x)/(1+exp(alpha[i]+beta[j]*x))))
}
}
# Draw contour plot
contour(alpha, beta, posterior, xlim = c(-2,6), ylim = c(-1,30), xlab = "alpha", ylab ="beta")
contour(alpha, beta, posterior, xlim = c(-2,6), ylim = c(-1,30), xlab = "alpha", ylab ="beta")
#problem 4.1 b)
library(stats)
y <- c(43,44,45,46.5,47.5)
equation <- function(theata){
2 * sum((y - theata) / (1 + (y - theata) ^ 2))
}
mode <- uniroot(equation, lower = -100, upper = 100)[1]
install.packages('stats')
install.packages("stats")
install.packages("stats")
install.packages("stats")
library(stats)
y <- c(43,44,45,46.5,47.5)
equation <- function(theata){
2 * sum((y - theata) / (1 + (y - theata) ^ 2))
}
mode <- uniroot(equation, lower = -100, upper = 100)[1]
#problem 4.1 b)
library(stats)
y <- c(43,44,45,46.5,47.5)
equation <- function(theata){
2 * sum((y - theata) / (1 + (y - theata) ^ 2))
}
mode <- uniroot(equation, lower = -100, upper = 100)[1]
#problem 4.1 b)
library(stats)
y <- c(43,44,45,46.5,47.5)
#problem 4.1 b)
equation <- function(theata){
2 * sum((y - theata) / (1 + (y - theata) ^ 2))
}
mode <- uniroot(equation, lower = -100, upper = 100)[1]
mode
#problem 4.1 b)
library(stats)
y <- c(43,44,45,46.5,47.5)
first_derivative <- function(theata){
2 * sum((y - theata) / (1 + (y - theata) ^ 2))
}
mode <- uniroot(first_derivative, lower = -100, upper = 100)[1]
#plot the approximate normal density
x <- seq(0,100,0.01)
y <- dnorm((x - 44.86237) * (0.7273299) ^ 0.5)
plot(x, y, type = 'l', xlim = c(38,53), ylim = c(0,0.5))
x <- seq(0,100,0.01)
y <- dnorm((x - 44.86237) * (0.7273299) ^ 0.5)
plot(x, y, type = 'l', xlim = c(38,53), ylim = c(0,0.5))
theta <- seq(0,100,0.001)
y <- c(43,44,45,46.5,47.5)
posterior <-rep(0, length(theta))
for(i in 1:length(theta)){
posterior[i] <- prod(1/(1+(y-theta[i])^2))
}
par(new = TRUE)
x <- seq(0,100,0.01)
y <- dnorm((x - 44.86237) * (0.7273299) ^ 0.5)
plot(x, y, type = 'l', xlim = c(35,55), ylim = c(0,0.5))
theta <- seq(0,100,0.001)
x <- seq(0,100,0.01)
y <- dnorm((x - 44.86237) * (0.7273299) ^ 0.5)
plot(x, y, type = 'l', xlim = c(35,55), ylim = c(0,0.5))
theta <- seq(0,100,0.001)
y <- c(43,44,45,46.5,47.5)
posterior <-rep(0, length(theta))
for(i in 1:length(theta)){
posterior[i] <- prod(1 / (1 + (y - theta[i]) ^ 2))
}
plot(theta, posterior / (sum(posterior) * 0.001), xlim = c(35,55), ylim = c(0,0.5), lty = 2, type = 'l')
par(new = TRUE)
plot(theta, posterior / (sum(posterior) * 0.001), xlim = c(35,55), ylim = c(0,0.5), lty = 2, type = 'l')
x <- seq(0,100,0.01)
y <- dnorm((x - 44.86237) * (0.7273299) ^ 0.5)
plot(x, y, type = 'l', xlim = c(35,55), ylim = c(0,0.5))
#plot the exact density
theta <- seq(0,100,0.001)
y <- c(43,44,45,46.5,47.5)
posterior <-rep(0, length(theta))
for(i in 1:length(theta)){
posterior[i] <- prod(dcauchy(y, location = theta[i]))
}
par(new = TRUE)
plot(theta, posterior / (sum(posterior) * 0.001), xlim = c(35,55), ylim = c(0,0.5), lty = 2, type = 'l')
x <- seq(0,100,0.01)
y <- dnorm((x - 44.86237) * (0.7273299) ^ 0.5)
plot(x, y, type = 'l', xlim = c(40,50), ylim = c(0,0.5))
#plot the exact density
theta <- seq(0,100,0.001)
y <- c(43,44,45,46.5,47.5)
posterior <-rep(0, length(theta))
for(i in 1:length(theta)){
posterior[i] <- prod(dcauchy(y, location = theta[i]))
}
par(new = TRUE)
plot(theta, posterior / (sum(posterior) * 0.001), xlim = c(40,50), ylim = c(0,0.5), lty = 2, type = 'l')
I_theta <- -ddtheta(t)
I_theta
ddtheta<-function(theta){    sum((2*(y-theta)^2-2)/(1+(y-theta)^2)^2)    }
ddtheta<-function(theta){
sum((2*(y-theta)^2-2)/(1+(y-theta)^2)^2)
}
t <- 44.86235
I_theta <- -ddtheta(t)
I_theta
I_theta
theta<-seq(0,100,.1)
post<-rep(0,1001)
for (i in 1:1001){
post[i]=prod(dcauchy(y,location=theta[i]))
}
post<-post/sum(post)*10
plot(theta,post,type="l",xlim=c(40,50),ylim=c(0, .5),lty=2)
curve(dnorm(x, mean=t, sd=sqrt(1/I_theta)),add=T)
x <- seq(0,100,0.01)
y <- dnorm((x - 44.86237) * (0.7273299))
plot(x, y, type = 'l', xlim = c(40,50), ylim = c(0,0.5))
#plot the exact density
theta <- seq(0,100,0.001)
y <- c(43,44,45,46.5,47.5)
posterior <-rep(0, length(theta))
for(i in 1:length(theta)){
posterior[i] <- prod(dcauchy(y, location = theta[i]))
}
par(new = TRUE)
plot(theta, posterior / (sum(posterior) * 0.001), xlim = c(40,50), ylim = c(0,0.5), lty = 2, type = 'l')
ddtheta<-function(theta){
sum((2*(y-theta)^2-2)/(1+(y-theta)^2)^2)
}
t <- 44.86235
I_theta <- -ddtheta(t)
I_theta
theta<-seq(0,100,.1)
post<-rep(0,1001)
for (i in 1:1001){
post[i]=prod(dcauchy(y,location=theta[i]))
}
post<-post/sum(post)*10
plot(theta,post,type="l",xlim=c(40,50),ylim=c(0, .5),lty=2)
curve(dnorm(x, mean=t, sd=sqrt(1/I_theta)),add=T)
y=c(43,44,45,46.5,47.5)
ddtheta<-function(theta){
sum((2*(y-theta)^2-2)/(1+(y-theta)^2)^2)
}
t <- 44.86235
I_theta <- -ddtheta(t)
I_theta
theta<-seq(0,100,.1)
post<-rep(0,1001)
for (i in 1:1001){
post[i]=prod(dcauchy(y,location=theta[i]))
}
post<-post/sum(post)*10
plot(theta,post,type="l",xlim=c(40,50),ylim=c(0, .5),lty=2)
curve(dnorm(x, mean=t, sd=sqrt(1/I_theta)),add=T)
x
dnorm(x)
theta <- seq(0,100,0.001)
y <- c(43,44,45,46.5,47.5)
posterior <-rep(0, length(theta))
for(i in 1:length(theta)){
posterior[i] <- prod(dcauchy(y, location = theta[i]))
}
}
plot(theta, posterior / (sum(posterior) * 0.001), xlim = c(40,50), ylim = c(0,0.5), lty = 2, type = 'l')
curve(dnorm(x, mean = mode, sd = sqrt(1 / 1.37489)), add=T)
library(stats)
y <- c(43,44,45,46.5,47.5)
first_derivative <- function(theata){
2 * sum((y - theata) / (1 + (y - theata) ^ 2))
}
mode <- uniroot(first_derivative, lower = -100, upper = 100)[1]
curve(dnorm(x, mean = mode, sd = sqrt(1 / 1.37489)), add = T)
mode <- as.numeric(mode)
curve(dnorm(x, mean = mode, sd = sqrt(1 / 1.37489)), add = T)
setwd("~/Courses/Bayesian-Statistics/HW2")
library(mvtnorm)
# Input the data
x <- c(-0.86, -0.30, -0.05, 0.73)
n <- rep(5, 4)
y <- c(0, 1, 3, 5)
theta <- y / n
# Use logistic regression to calculate alpha and beta, nothing different with example in book
logis_regression <- glm(theta ~ x, family = binomial)
summary(logis_regression)
# Compute the posterior distribution
miu<-c(0,10)
alpha <- seq(-5, 10, 0.05)
beta <- seq(-10, 40, 0.05)
sigma <- matrix(c(4, 10, 10, 100), nrow = 2)
posterior <- matrix(0,length(alpha),length(beta))
for (i in 1:length(alpha)){
for (j in 1:length(beta)){
posterior[i,j]<-dmvnorm(c(alpha[i],beta[j]),miu,sigma)*prod(dbinom(y,n,exp(alpha[i]+beta[j]*x)/(1+exp(alpha[i]+beta[j]*x))))
}
}
# Draw contour plot
contour(alpha, beta, posterior, xlim = c(-2,6), ylim = c(-1,30), xlab = "alpha", ylab ="beta")
# Draw scatterplot
posterior <- posterior/sum(posterior)
randalpha <- rep(0,1000)
randbeta <- rep(0,1000)
alpha_y <- rowSums(posterior)
alpha_ycum <- cumsum(alpha_y)
for(i in 1: 1000){
ind <- which(alpha_ycum>=runif(1,0,1))[1]
randalpha[i] <- alpha[ind]
beta_alpha_y <- posterior[ind,]/alpha_y[ind]
beta_alpha_ycum <- cumsum(beta_alpha_y)
randbeta[i] <- beta[which(beta_alpha_ycum>=runif(1,0,1))[1]]
}
plot(randalpha,randbeta, xlim = c(-2,6), ylim = c(0,30), xlab = "alpha", ylab ="beta")
# Draw contour plot
contour(alpha, beta, posterior, xlim = c(-2,4), ylim = c(-1,25), xlab = "alpha", ylab ="beta")
LD50
LD50 <- randalpha / randbeta
hist(LD50)
# Draw scatterplot
posterior <- posterior/sum(posterior)
randalpha <- rep(0,1000)
randbeta <- rep(0,1000)
alpha_y <- rowSums(posterior)
alpha_ycum <- cumsum(alpha_y)
for(i in 1: 1000){
ind <- which(alpha_ycum>=runif(1,0,1))[1]
randalpha[i] <- alpha[ind]
beta_alpha_y <- posterior[ind,]/alpha_y[ind]
beta_alpha_ycum <- cumsum(beta_alpha_y)
randbeta[i] <- beta[which(beta_alpha_ycum>=runif(1,0,1))[1]]
}
plot(randalpha,randbeta, xlim = c(-2,6), ylim = c(0,30), xlab = "alpha", ylab ="beta")
# Draw scatterplot
posterior <- posterior/sum(posterior)
randalpha <- rep(0,1000)
randbeta <- rep(0,1000)
alpha_y <- rowSums(posterior)
alpha_ycum <- cumsum(alpha_y)
for(i in 1: 1000){
ind <- which(alpha_ycum>=runif(1,0,1))[1]
randalpha[i] <- alpha[ind]
beta_alpha_y <- posterior[ind,]/alpha_y[ind]
beta_alpha_ycum <- cumsum(beta_alpha_y)
randbeta[i] <- beta[which(beta_alpha_ycum>=runif(1,0,1))[1]]
}
plot(randalpha,randbeta, xlim = c(-2,6), ylim = c(0,30), xlab = "alpha", ylab ="beta")
# Draw scatterplot
posterior <- posterior/sum(posterior)
randalpha <- rep(0,1000)
randbeta <- rep(0,1000)
alpha_y <- rowSums(posterior)
alpha_ycum <- cumsum(alpha_y)
for(i in 1: 1000){
ind <- which(alpha_ycum>=runif(1,0,1))[1]
randalpha[i] <- alpha[ind]
beta_alpha_y <- posterior[ind,]/alpha_y[ind]
beta_alpha_ycum <- cumsum(beta_alpha_y)
randbeta[i] <- beta[which(beta_alpha_ycum>=runif(1,0,1))[1]]
}
plot(randalpha,randbeta, xlim = c(-2,6), ylim = c(0,30), xlab = "alpha", ylab ="beta")
# Draw scatterplot
posterior <- posterior/sum(posterior)
randalpha <- rep(0,1000)
randbeta <- rep(0,1000)
alpha_y <- rowSums(posterior)
alpha_ycum <- cumsum(alpha_y)
for(i in 1: 1000){
ind <- which(alpha_ycum>=runif(1,0,1))[1]
randalpha[i] <- alpha[ind]
beta_alpha_y <- posterior[ind,]/alpha_y[ind]
beta_alpha_ycum <- cumsum(beta_alpha_y)
randbeta[i] <- beta[which(beta_alpha_ycum>=runif(1,0,1))[1]]
}
plot(randalpha,randbeta, xlim = c(-2,6), ylim = c(0,30), xlab = "alpha", ylab ="beta")
# LD50
LD50 <- randalpha / randbeta
hist(LD50)
